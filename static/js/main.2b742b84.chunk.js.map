{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","counter","step","frameSize","itemWidth","animationDuration","nextButton","setState","prevButton","setImageSize","event","target","value","setFrameSize","setStep","setAnimationDuration","this","images","props","className","style","width","transform","marginLeft","transition","map","image","index","src","alt","toString","type","onClick","ClassNames","disabled","length","htmlFor","id","min","max","placeholder","onChange","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2b742b84.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/control-has-associated-label */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React from 'react';\nimport './Carousel.scss';\nimport './variables.scss';\nimport ClassNames from 'classnames';\n\nclass Carousel extends React.Component<Props, State> {\n  state = {\n    counter: 0,\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n  };\n\n  nextButton = () => {\n    const {\n      step,\n      frameSize,\n      counter,\n    } = this.state;\n\n    if ((counter - frameSize - step) >= -10) {\n      this.setState({ counter: counter - step });\n    } else {\n      this.setState({ counter: -10 + frameSize });\n    }\n  };\n\n  prevButton = () => {\n    const {\n      step,\n      counter,\n    } = this.state;\n\n    if ((counter + step) <= 0) {\n      this.setState({ counter: counter + step });\n    } else {\n      this.setState({ counter: 0 });\n    }\n  };\n\n  setImageSize = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ itemWidth: +event.target.value });\n  };\n\n  setFrameSize = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ frameSize: +event.target.value });\n\n    if (this.state.frameSize < 1) {\n      this.setState({ frameSize: 1 });\n    }\n  };\n\n  setStep = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ step: +event.target.value });\n  };\n\n  setAnimationDuration = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ animationDuration: +event.target.value });\n\n    if (this.state.animationDuration < 100) {\n      this.setState({ animationDuration: 0 });\n    }\n  };\n\n  render() {\n    const {\n      frameSize,\n      counter,\n      step,\n      itemWidth,\n      animationDuration,\n    } = this.state;\n\n    const { images } = this.props;\n\n    return (\n      <>\n        <div className=\"Carousel\">\n          <div\n            className=\"Carousel-container\"\n            style={{\n              width: `${frameSize * itemWidth}px`,\n            }}\n          >\n            <ul\n              className=\"Carousel__list\"\n              style={{\n                transform: `translateX(${counter}px)`,\n                marginLeft: `${counter * itemWidth}px`,\n                transition: `${animationDuration}ms`,\n                width: `${frameSize * itemWidth}px`,\n              }}\n            >\n              {images.map((image, index) => (\n                <li\n                  key={image}\n                  className=\"Carousel__list-img\"\n                >\n                  <img\n                    src={image}\n                    alt={(index + 1).toString()}\n                    style={\n                      {\n                        width: `${itemWidth}px`,\n                      }\n                    }\n                  />\n                </li>\n              ))}\n            </ul>\n\n          </div>\n        </div>\n\n        <div className=\"Control-panel\">\n          {/* Previous Button */}\n          <div className=\"Control-panel__buttons buttons\">\n            <button\n              type=\"button\"\n              onClick={() => {\n                this.prevButton();\n              }}\n              className={ClassNames('buttons__prev-button', {\n                disabled: counter === 0,\n              })}\n              disabled={counter === 0}\n            />\n\n            {/* Next Button */}\n            <button\n              type=\"button\"\n              className={ClassNames('buttons__next-button', {\n                disabled: counter <= -images.length + step,\n              })}\n              onClick={() => {\n                this.nextButton();\n              }}\n              disabled={counter <= -images.length + step}\n            />\n          </div>\n\n          <label\n            htmlFor=\"width\"\n          >\n            Change Image Width:\n            {' '}\n          </label>\n          <input\n            id=\"width\"\n            type=\"range\"\n            value={itemWidth}\n            step={10}\n            min={10}\n            max={400}\n            placeholder=\"Set an image size\"\n            className=\"Control-panel__setItemWidth\"\n            onChange={this.setImageSize}\n          />\n          <br />\n\n          <label\n            htmlFor=\"frameSize\"\n          >\n            Change FrameSize:\n            {' '}\n          </label>\n          <input\n            id=\"frameSize\"\n            type=\"range\"\n            min={1}\n            max={images.length}\n            value={frameSize}\n            placeholder=\"Set a frame size\"\n            className=\"Control-panel__setFrame\"\n            onChange={this.setFrameSize}\n          />\n          <br />\n\n          <label\n            htmlFor=\"step\"\n          >\n            Scroll Step:\n            {' '}\n          </label>\n          <input\n            id=\"step\"\n            type=\"range\"\n            min={1}\n            max={images.length}\n            value={step}\n            placeholder=\"Set scroll step\"\n            className=\"Control-panel__setStep\"\n            onChange={this.setStep}\n          />\n          <br />\n\n          <label\n            htmlFor=\"animation\"\n          >\n            Animation duration:\n            {' '}\n          </label>\n          <input\n            id=\"animation\"\n            type=\"range\"\n            min={0}\n            max={5000}\n            step={100}\n            value={animationDuration}\n            placeholder=\"Set animation duration\"\n            className=\"Control-panel__animationTime\"\n            onChange={this.setAnimationDuration}\n          />\n\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>\n          Carousel with\n          {' '}\n          {images.length}\n          {' '}\n          images\n        </h1>\n\n        <Carousel images={images} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}