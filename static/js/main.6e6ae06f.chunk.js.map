{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["imagesSrc","Carousel","state","counter","step","frameSize","itemWidth","animationDuration","this","className","style","width","overflow","map","image","index","src","alt","toString","type","onClick","showNextImgs","document","querySelector","setTimeout","tagName","scrollLeft","setState","prevState","ClassNames","disabled","length","htmlFor","id","placeholder","onChange","event","target","value","max","React","Component","App","images","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.6e6ae06f.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/control-has-associated-label */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React from 'react';\nimport './Carousel.scss';\nimport './variables.scss';\nimport ClassNames from 'classnames';\n\nconst imagesSrc: string[] = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n\nclass Carousel extends React.Component<Props, State> {\n  state = {\n    counter: 0,\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n  };\n\n  render() {\n    let { frameSize } = this.state;\n    const {\n      counter,\n      step,\n      itemWidth,\n      animationDuration,\n    } = this.state;\n\n    frameSize *= itemWidth;\n\n    return (\n      <div className=\"Carousel\">\n        <div className=\"Carousel-container\">\n          <ul\n            className=\"Carousel__list\"\n            style={\n              {\n                width: `${frameSize}px`,\n                overflow: 'hidden',\n              }\n            }\n          >\n            {imagesSrc.map((image, index) => (\n              <li\n                key={image}\n                className=\"Carousel__list-img\"\n              >\n                <img\n                  src={image}\n                  alt={(index + 1).toString()}\n                  style={\n                    {\n                      width: `${itemWidth}px`,\n                    }\n                  }\n                />\n              </li>\n            ))}\n          </ul>\n\n          <button\n            type=\"button\"\n            onClick={() => {\n              const showNextImgs = document.querySelector('.Carousel__list');\n\n              setTimeout(() => {\n                // explicit check to avoid typescript error\n                if (showNextImgs?.tagName === 'UL') {\n                  showNextImgs.scrollLeft -= (itemWidth * step);\n                }\n\n                if (counter <= 0) {\n                  this.setState({ counter: 0 });\n                }\n\n                this.setState(prevState => {\n                  return {\n                    counter: (prevState.counter - step),\n                  };\n                });\n              }, animationDuration);\n            }}\n            className={ClassNames('Carousel__prev-button', {\n              disabled: counter === 0,\n            })}\n            disabled={counter <= 0}\n          >\n            {/* <i>Previous</i> */}\n          </button>\n\n          <button\n            type=\"button\"\n            className={ClassNames('Carousel__next-button', {\n              disabled: counter >= 8,\n            })}\n            disabled={counter >= 8}\n            onClick={() => {\n              setTimeout(() => {\n                const showNextImgs = document.querySelector('.Carousel__list');\n\n                // Explicit check to avoid typescript error\n                if (showNextImgs?.tagName === 'UL') {\n                  showNextImgs.scrollLeft += (itemWidth * step);\n                }\n\n                // Disables \"Next\" button\n                if (counter + (frameSize / itemWidth) >= imagesSrc.length) {\n                  this.setState({ counter: 8 });\n                }\n\n                this.setState(prevState => {\n                  return {\n                    counter: (prevState.counter + step),\n                  };\n                });\n              }, animationDuration);\n            }}\n          />\n        </div>\n        <label\n          htmlFor=\"width\"\n        >\n          Change Image Width:\n          {' '}\n        </label>\n        <input\n          id=\"width\"\n          type=\"number\"\n          placeholder=\"Set an image size\"\n          className=\"Carousel__setItemWidth\"\n          onChange={(event) => {\n            this.setState({ itemWidth: +event.target.value });\n          }}\n        />\n        <br />\n        <label\n          htmlFor=\"frameSize\"\n        >\n          Change FrameSize:\n          {' '}\n        </label>\n        <input\n          id=\"frameSize\"\n          type=\"number\"\n          placeholder=\"Set a frame size\"\n          className=\"Carousel__setFrame\"\n          max={imagesSrc.length}\n          onChange={(event) => {\n            this.setState({ frameSize: +event.target.value });\n\n            if (frameSize < 1) {\n              this.setState({ frameSize: 1 });\n            }\n          }}\n        />\n        <br />\n        <label\n          htmlFor=\"step\"\n        >\n          Scroll Step:\n          {' '}\n        </label>\n        <input\n          id=\"step\"\n          type=\"number\"\n          placeholder=\"Set scroll step\"\n          className=\"Carousel__setStep\"\n          max={imagesSrc.length}\n          onChange={(event) => {\n            this.setState({ step: +event.target.value });\n          }}\n        />\n        <br />\n        <label\n          htmlFor=\"animation\"\n        >\n          Animation duration:\n          {' '}\n        </label>\n        <input\n          id=\"animation\"\n          type=\"number\"\n          step={100}\n          placeholder=\"Set animation duration\"\n          className=\"Carousel__animationTime\"\n          onChange={(event) => {\n            this.setState({ animationDuration: +event.target.value });\n\n            if (animationDuration < 100) {\n              this.setState({ animationDuration: 0 });\n            }\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>\n          Carousel with\n          {images.length}\n          images\n        </h1>\n\n        <Carousel images={images} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}